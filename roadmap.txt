This file hasn't been maintained since 2013.

Examples:

basic
- LP
- QP
- SOCP
- SDP

graph
- single commodity flow
- max flow that returns min cut
- electrical grid from Eric's paper
- social network
- latency
- flow control (fixed paths with delay = sum of latency)

control
- optimal control
- MPC

layout

SOC controlled spaceship

portfolio optimization
- static
- time series

parallel
- 10 fold CV (testing error vs training error) for SVM?
- trade off curve
- Monte Carlo

biconvex 
- non-negative matrix factorization
- missing data

ADMM
- consensus
- standard form f(x) + g(z) s.t. Ax + Bz = c

images
- foreground vs background classifier
- convolutions

as for examples to be working out, i think we need very basic ones, including ones that are similar to the CVX library and also ones that illustrate simple things like changing the objective (for example, in an LP, you might first minimize, and then maximize, the same objective).  we also need some simple examples for non-experts that show how to create a trade off by varying a parameter and repeatedly solving.  also, and this one is important --- simple ways to do things in parallel, say using openMP.

we also want some cooler examples that rely on convex optimization as a subroutine.  obvious examples are branch and bound, non-convex ADMM/operator splitting and other heuristics for non convex problems, convex-concave procedure, bi-convex problems (like nonnegative matrix factorization), model predictive control, ADMM (general form), and so on.

finally, we want some cool OOCO (object oriented convex optimization) examples.  we have talked about network flow problems already.  here is another area:  geometric problems.  we could build up convex sets defined by convex inequalities (or equalities); then we can implement things like intersection, bounding box, and so on.  for example, you might intersect a bunch of sets and then ask for the bounding box.  or you might ask for a point in the intersection.  or the distance between two sets; or, you might ask for a separating hyperplane.  this would require some real thought to design it correctly, but it would be very cool when it's done.  we wouldn't have too implement very sophisticated methods, but even some basic ones like those already mentioned would be cool.

i'd also like to see some vertical examples, such as a family of examples for portfolio optimization or for time-series fitting.

Bugs:
Need separate BoolMat for constant (see vstack(x,2))

Features:

Finish README (mainly DCP and intro on dcp.stanford.edu)
    add parameter example
    context/book citation for examples
Choose internal matrix type and get rid of unnecessary interface code.
Switch from object id to variable id so index and transpose can be grouped together?
Add scipy sparse matrix support
Interface for is_dcp
simplify when objective or constraint constructed so only need to stuff parameters in the matrix
Organize atoms
Switch from cvxopt to numpy matrices
exponential cone
expression.value
Organize parse tree
Flatten addition chains.
Variable attributes (e.g. Positive) - BoolVar vs Variable("boolean")
Fix returned statuses for numerical problems in ECOS

Long term:

targeting QCML
put constraints_matrix function in C
branch and bound extension
thread safety
large data sets
ADMM canonicalization
simplification of parse tree (i.e. compiling)